<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hailey Fanucchi</title>
    <link>/</link>
    <description>Recent content on Hailey Fanucchi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sat, 08 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>My Simple Understanding of the Interaction of Python and R</title>
      <link>/post/2021/05/08/my-post/</link>
      <pubDate>Sat, 08 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/2021/05/08/my-post/</guid>
      <description>A simple way to code in both R and Python in R server is to define the coding chunk with either “{r}” or “{python}”.
You can switch back and forth between R and Python by using the reticulate package in R.
library(reticulate) me&amp;lt;-&amp;quot;Hailey&amp;quot; To pull R-defined objects when coding in python just write &#34;r.___&#34;.
me=&amp;quot;Fanucchi&amp;quot; print(r.me,me) ## Hailey Fanucchi To code Python-defined objects when coding in R just write &#34;</description>
    </item>
    
    <item>
      <title>Playing in Python</title>
      <link>/post/2021/05/08/playing-in-python/</link>
      <pubDate>Sat, 08 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/2021/05/08/playing-in-python/</guid>
      <description>I have learned that coding in python is really not that different than coding in R.
One big difference is that in python when you index the first position is the 0th position. Here is an example:
listA=[1,2,3,4,5,6,7,8,9,10] listB=[&amp;#39;I&amp;#39;,&amp;#39;II&amp;#39;,&amp;#39;III&amp;#39;,&amp;#39;IV&amp;#39;,&amp;#39;V&amp;#39;,&amp;#39;VI&amp;#39;,&amp;#39;VII&amp;#39;, &amp;#39;VIII&amp;#39;, &amp;#39;IX&amp;#39;, &amp;#39;X&amp;#39;] listA ## [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] listB ## [&amp;#39;I&amp;#39;, &amp;#39;II&amp;#39;, &amp;#39;III&amp;#39;, &amp;#39;IV&amp;#39;, &amp;#39;V&amp;#39;, &amp;#39;VI&amp;#39;, &amp;#39;VII&amp;#39;, &amp;#39;VIII&amp;#39;, &amp;#39;IX&amp;#39;, &amp;#39;X&amp;#39;] listA[0] ## 1 listA[1] ## 2 listA[9] ## 10 listB[0] ## &amp;#39;I&amp;#39; listB[1] ## &amp;#39;II&amp;#39; listB[9] ## &amp;#39;X&amp;#39; You can use python as a calculator:</description>
    </item>
    
    <item>
      <title> fanucchiproject2</title>
      <link>/project/project2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/project/project2/</guid>
      <description>R Markdown 0. (5 pts) Introduce your dataset and each of your variables (or just your main variables if you have lots) in a paragraph. What are they measuring? How many observations? movies&amp;lt;-read_csv(&amp;quot;https://vincentarelbundock.github.io/Rdatasets/csv/ggplot2movies/movies.csv&amp;quot;) mov &amp;lt;-movies %&amp;gt;% na.omit() %&amp;gt;% select(-1, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17) mov &amp;lt;-subset(mov, mov$Short !=1) mov &amp;lt;- mov %&amp;gt;% select(-13) mov &amp;lt;- subset(mov, mov$Documentary !=1) mov &amp;lt;- mov %&amp;gt;% select(-11) movnot &amp;lt;- mov %&amp;gt;% select(-1)  The data set that I chose to do project 2 is based on the statistics and information IMDB has on a set of movies from 1938-2005.</description>
    </item>
    
    <item>
      <title>fanucchi.project1</title>
      <link>/project/project1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/project/project1/</guid>
      <description>Find Data library(tidyverse) motor &amp;lt;- read_csv(&amp;quot;https://vincentarelbundock.github.io/Rdatasets/csv/stevedata/mvprod.csv&amp;quot;) pop &amp;lt;- read_csv(&amp;quot;https://vincentarelbundock.github.io/Rdatasets/csv/gt/countrypops.csv&amp;quot;) glimpse(motor) ## Rows: 1,206 ## Columns: 4 ## $ X1 &amp;lt;dbl&amp;gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18… ## $ country &amp;lt;chr&amp;gt; &amp;quot;Algeria&amp;quot;, &amp;quot;Argentina&amp;quot;, &amp;quot;Australia&amp;quot;, &amp;quot;Austria&amp;quot;, &amp;quot;Azerbaijan&amp;quot;,… ## $ year &amp;lt;dbl&amp;gt; 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1… ## $ value &amp;lt;dbl&amp;gt; NA, NA, 58000, NA, NA, 0, 2400, NA, 0, NA, 387726, NA, NA, NA… glimpse(pop) ## Rows: 12,470 ## Columns: 6 ## $ X1 &amp;lt;dbl&amp;gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,… ## $ country_name &amp;lt;chr&amp;gt; &amp;quot;Aruba&amp;quot;, &amp;quot;Aruba&amp;quot;, &amp;quot;Aruba&amp;quot;, &amp;quot;Aruba&amp;quot;, &amp;quot;Aruba&amp;quot;, &amp;quot;Aruba&amp;quot;, … ## $ country_code_2 &amp;lt;chr&amp;gt; &amp;quot;AW&amp;quot;, &amp;quot;AW&amp;quot;, &amp;quot;AW&amp;quot;, &amp;quot;AW&amp;quot;, &amp;quot;AW&amp;quot;, &amp;quot;AW&amp;quot;, &amp;quot;AW&amp;quot;, &amp;quot;AW&amp;quot;, &amp;quot;AW&amp;quot;, … ## $ country_code_3 &amp;lt;chr&amp;gt; &amp;quot;ABW&amp;quot;, &amp;quot;ABW&amp;quot;, &amp;quot;ABW&amp;quot;, &amp;quot;ABW&amp;quot;, &amp;quot;ABW&amp;quot;, &amp;quot;ABW&amp;quot;, &amp;quot;ABW&amp;quot;, &amp;quot;ABW&amp;quot;… ## $ year &amp;lt;dbl&amp;gt; 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, … ## $ population &amp;lt;dbl&amp;gt; 54211, 55438, 56225, 56695, 57032, 57360, 57715, 58055…  1.</description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>/projects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/projects/</guid>
      <description> Check out some of my coding projects below:
 Wrangling &amp;amp; Exploratory Data Analysis
 Modeling, Inference, Prediction
  -- </description>
    </item>
    
    <item>
      <title>Resume</title>
      <link>/resume/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/resume/</guid>
      <description>    </description>
    </item>
    
  </channel>
</rss>
